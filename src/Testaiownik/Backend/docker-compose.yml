version: '3.8'

services:
  # TESTAIOWNIK Backend API
  backend:
    build:
      context: ../../../
      dockerfile: src/Testaiownik/Backend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://testaiownik:password@db:5432/testaiownik
      - QDRANT_URL=http://qdrant:6333
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - CHAT_MODEL_NAME_DEV=${CHAT_MODEL_NAME_DEV}
      - EMBEDDING_MODEL_NAME=${EMBEDDING_MODEL_NAME}
    depends_on:
      - db
      - qdrant
      - redis
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=testaiownik
      - POSTGRES_USER=testaiownik
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.0
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  volumes:
  postgres_data:
  qdrant_data:
  redis_data: